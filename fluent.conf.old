<source>
    @type syslog
    port 5140
    bind 0.0.0.0
    tag pfSense
    <parse>
        <pattern>
            #filterlog
            @type regexp
            expression /^(?<time>[\w]{3}[ ]+[\d]{1,2}[ ]{1}[\d]{1,2}:[\d]{1,2}:[\d]{1,2}) ((?<type>filterlog: )+)(?<message>.*)$/
        </pattern>
    </parse>
</source>
    
    <match pfSense.local0.info>
        @type rewrite_tag_filter
        <rule>
            #pfSense filterlog: IPv4 TCP
            key message
            pattern /^.*,(in|out),4,.*,tcp,.*$/
            tag pfSense.logs.tcp4
        </rule>
        <rule>
            #pfSense Filterlog IPV4 ICMP Echo
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,(request|reply),.*$/
            tag pfSense.logs.tcp4.icmp.Echo
        </rule>
        <rule>
            #pfSense Filterlog IPV4 ICMP Unreachable
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,unreachproto,.*/
            tag pfSense.tcp4.icmp.Unreachable
        </rule>
        <rule>
            #pfSense Filterlog  IPv4 ICMP TStamp
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,tstamp,.*$/
            tag pfSense.tcp4.icmp.Tstamp
        </rule>
        <rule>
            #pfSense Filterlog IPv4 ICMP Need Frag
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,needfrag,.*/
            tag pfSense.tcp4.icmp.Needfrag
        </rule>
        <rule>
            #pfSense Filterlog  IPv4 ICMP Unreachable Port
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,unreachport,.*/
            tag pfSense.tcp4.icmp.Unreachport
        </rule>
        <rule>
            #pfSense Filterlog IPv4 ICMP Default
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,(?!(request|reply|unreachproto|unreachport|unreach|timexceed|paramprob|redirect|maskreply|needfrag|tstamp|tstampreply)),.*$/
            tag pfSense.tcp4.icmp.default
        </rule>
        <rule>
            #pfSense Filterlog  IPv4 ICMP Unreachable Other
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,(unreach|timexceed|paramprob|redirect|maskreply),.*$/
            tag pfSense.tcp4.icmp.Unreachother
        </rule>
        <rule>
            #pfSense Filterlog IPv4 ICMP TStamp Reply
            key message
            pattern /.*,(in|out),4,.*,icmp,.*,tstampreply,.*$/
            tag pfSense.tcp4.icmp.Tstampreply
        </rule>
        <rule>
            #pfSense Filterlog  IPv6 TCP
            key message
            pattern /.*,(in|out),6,.*,TCP,.*$/
            tag pfSense.tcp6
        </rule>
        <rule>
            #pfSense Filterlog  IPv6 UDP 
            key message
            pattern /.*,(in|out),6,.*,UDP,.*$/
            tag pfSense.udp6
        </rule>
        <rule>
            #pfSense Filterlog IPv4 UDP
            key message
            pattern /.*,(in|out),4,.*,udp,.*$/
            tag pfSense.udp4
        </rule>
        <rule>
            #pfSense Filterlog  IPv6 ICMP
            key message
            pattern /.*,(in|out),6,.*,ICMPv6,.*/
            tag pfSense.tcp6.icmp
        </rule>
        
    </match>
    

    #TCP4
    <filter pfSense.logs.tcp4>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,SourcePort,DestPort,DataLength,TCPFlags,Sequence,ACK,Window,URG,Option
        </parse>
    </filter>
    #ICMP4 ECHO 
    <filter pfSense.logs.tcp4.icmp.Echo>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_ID,ICMP_Sequence
        </parse>
    </filter>
    #ICMP4 Unreachable
    <filter pfSense.tcp4.icmp.Unreachable>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_DestIP,ICMP_ProtocolID
        </parse>
    </filter>
    #ICMP4 TStamp
    <filter pfSense.tcp4.icmp.Tstamp>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_ID,ICMP_Sequence
        </parse>
    </filter>
    #Icmp4 Needfrag
    <filter pfSense.tcp4.icmp.Needfrag>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_DestIP,ICMP_MTU
        </parse>
    </filter>
    #ICMp4 unreachport
    <filter  pfSense.tcp4.icmp.Unreachport>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_DestIP,ICMP_ProtocolID,ICMP_Port
        </parse>
    </filter>
    #ICMP4 Default
    <filter pfSense.tcp4.icmp.default>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_Description
        </parse>
    </filter>
    #ICMP4 Unreach Other
    <filter  pfSense.tcp4.icmp.Unreachother>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_Description
        </parse>
    </filter>
    #ICMP4 TStamp Reply
    <filter pfSense.tcp4.icmp.Tstampreply>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,ICMP_Type,ICMP_ID,ICMP_Sequence,ICMP_otime,ICMP_rtime,ICMP_ttime
        </parse>
    </filter>
    #IPv6 TCP
    <filter pfSense.tcp6>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,Class,FlowLabel,HopLimit,Protocol,ProtocolID,Length,SourceIP,DestIP,SourcePort,DestPort,DataLength,TCPFlags,Sequence,ACK,Window,URG,Options
        </parse>
    </filter>
    #IPV6 UDP
    <filter pfSense.udp6>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,Class,FlowLabel,HopLimit,Protocol,ProtocolID,Length,SourceIP,DestIP,SourcePort,DestPort,DataLength
        </parse>
    </filter>
    #IPv4 UDP
    <filter pfSense.udp4>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,ID,Offset,Flags,ProtocolID,Protocol,Length,SourceIP,DestIP,SourcePort,DestPort,DataLength
        </parse>
    </filter>
    # IPv6 ICMP
    <filter pfSense.tcp6.icmp>
        @type parser
        key_name message
        <parse>
        @type csv
        keys RuleNumber,SubRuleNumber,Anchor,Tracker,Interface,Reason,Action,Direction,IPVersion,TOS,ECN,TTL,Protocol,ProtocolID,Length,SourceIP,DestIP,UnknownFld
        </parse>
    </filter>

    <filter pfSense.logs.**>
	    @type geoip
	    geoip_lookup_keys SourceIP
	    geoip2_database "/fluentd/GeoLite2-City.mmdb"
	    backend_library geoip2_c
	    <record>
	        city		${city.names.en["SourceIP"]}
	        country		${country.iso_code["SourceIP"]}
	        country_name	${country.names.en["SourceIP"]}
	    </record>
	    skip_adding_null_record	true
	    @log_level		info
    </filter>
  
    <match **.*>
        @type loki
        url "https://loki-{REDACTED}"
	    username "REDACTED"
	    password "REDACTED"
	    extra_labels {"service": "firewall"}
	    flush_interval 10s
	    flush_at_shutdown true
	    buffer_chunk_limit 1m
    </match>
    
    
